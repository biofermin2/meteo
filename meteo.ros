#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(:unio :dexador :jonathan :alexandria) :silent t)
  )					; => (:UNIO :DEXADOR :JONATHAN :ALEXANDRIA)

(defpackage :ros.script.meteo.3845973535
  (:use :cl :unio :dexador :jonathan :alexandria)
  (:shadow :delete :get))		; => #<PACKAGE "ROS.SCRIPT.METEO.3845973535">
(in-package :ros.script.meteo.3845973535) ; => #<PACKAGE "ROS.SCRIPT.METEO.3845973535">
(defconstant url "https://www.jma.go.jp/bosai/forecast/data/forecast/170000.json") ; => URL
(defparameter s-json (parse (dex:get url))) ; => S-JSON
(defvar weather)			    ; => WEATHER
(defvar noto)				    ; => NOTO
(defvar weathers)			    ; => WEATHERS
(defvar weather-code)			    ; => WEATHER-CODE

(sets weather (seek "weather" (format nil "~s" s-json))) ; => 
(setf noto (cadr weather))
(setf weathers (getf noto :|weathers|))
(setf weather-code (getf noto :|weatherCodes|))

(setf w-code-plist
      '(100 ☼ 101 ☼☁ 102 ☼☔ 104 ☼☃ 110 ☼→☁ 111 ☼→☁ 112 ☼→☔ 115 ☼→☃
	200 ☁ 201 ☁☼ 202 ☁☔ 204 ☁☃ 210 ☁→☼
	300 ☔ 301 ☔☼ 302 ☔☁ 303 ☔☃
	400 ☃ 401 ☃☼ 402 ☃☁ 403 ☃☔
	500 ☆🌙 501 ☆🌙☁ 502 ☆🌙☔ 504 ☆🌙☃ 510 ☆🌙→☁ 512 ☆🌙→☔
	601 ☁⭐🌙 610 ☁→⭐🌙
	701 ☔⭐🌙
	801 ☃⭐🌙))
(setf ht (plist-hash-table w-code-plist :test #'equal)) ; => #<HASH-TABLE :TEST EQUAL :COUNT 31 {100330BAF3}>

(defun code->sym (code)
    (if (stringp code)
            (gethash (parse-integer code) ht)
	          (gethash code ht))); => CODE->SYM


(defun main (&rest argv)
  (declare (ignorable argv))
  (format t "~{~s~}" (reverse (pairlis (mapcar #'code->sym weather-code) weathers))) 
  )					; => MAIN

;;; vim: set ft=lisp lisp:
